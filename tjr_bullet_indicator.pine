//@version=6
indicator("BPR [TakingProphets]", overlay=true, max_bars_back=500, max_boxes_count=500, max_lines_count=500, max_labels_count=50)

show_mitigated = input.bool(true, "Show Mitigated BPR")
sensitivity = input.int(2, "Sensitivity", minval=0, maxval=25)
bpr_color = input.color(color.green, "BPR Fill Color")
bpr_opacity = input.int(20, "BPR Fill Opacity (%)", minval=0, maxval=100)
use_atr_filter = input.bool(false, "Use ATR filter for FVG size")

TZ = "Asia/Jerusalem"
winBPR = "1630-1830"
sec5(expr) => request.security(syminfo.tickerid, "5", expr, gaps=barmerge.gaps_off, lookahead=barmerge.lookahead_off)

o = sec5(open)
h = sec5(high)
l = sec5(low)
c = sec5(close)
t = sec5(time)

y = sec5(year)
m = sec5(month)
d = sec5(dayofmonth)
t1630 = timestamp(TZ, y, m, d, 16, 30)
t1830 = timestamp(TZ, y, m, d, 18, 30)
t2300 = timestamp(TZ, y, m, d, 23, 0)
min5 = 5 * 60000

in_session = not na(time("5", winBPR, TZ))
session_open = t >= t1630 and t[1] < t1630
cleanup = t >= t2300 and t[1] < t2300

var box[] bprs = array.new_box()
var line[] mids = array.new_line()
var label[] tags = array.new_label()
var bool[] dirs = array.new_bool()
var float[] tops = array.new_float()
var float[] bottoms = array.new_float()
var float topB = na
var float botB = na
var int   tB = na
var float topS = na
var float botS = na
var int   tS = na
MAX_BPR = 500

reset_state() =>
    if array.size(bprs) > 0
        for i = 0 to array.size(bprs) - 1
            box.delete(array.get(bprs, i))
            line.delete(array.get(mids, i))
            label.delete(array.get(tags, i))
    array.clear(bprs)
    array.clear(mids)
    array.clear(tags)
    array.clear(dirs)
    array.clear(tops)
    array.clear(bottoms)

if session_open or cleanup
    reset_state()
    topB := na
    botB := na
    tB := na
    topS := na
    botS := na
    tS := na

fill_transp = 100 - bpr_opacity
bpr_fill = color.new(bpr_color, fill_transp)
atr5 = sec5(ta.atr(20))
sens_coeff = sensitivity * 0.08

conf5 = request.security(syminfo.tickerid, "5", barstate.isconfirmed, gaps=barmerge.gaps_off, lookahead=barmerge.lookahead_off)

bool new_bull_bpr = false
bool new_bear_bpr = false
bool bull_mitigated = false
bool bear_mitigated = false

make_bpr(_t, _top, _bot, _dir) =>
    t_end = _t + min5
    b = box.new(_t, _top, t_end, _bot, xloc=xloc.bar_time, extend=extend.right, border_color=color.black, bgcolor=bpr_fill)
    mid = (_top + _bot) / 2
    ln = line.new(_t, mid, t_end, mid, xloc=xloc.bar_time, extend=extend.right, color=color.black, width=1, style=line.style_dashed)
    padY = math.max((_top - _bot) * 0.02, syminfo.mintick * 2)
    padT = 30 * 1000
    lb = label.new(x=_t + padT, y=_top - padY, text="BPR", xloc=xloc.bar_time, yloc=yloc.price, style=label.style_label_left, size=size.tiny, textcolor=color.black, color=color.new(color.white, 80))
    array.push(bprs, b)
    array.push(mids, ln)
    array.push(tags, lb)
    array.push(dirs, _dir)
    array.push(tops, _top)
    array.push(bottoms, _bot)

bull_fvg = conf5 and in_session and l[1] > h[2]
bear_fvg = conf5 and in_session and h[1] < l[2]
if use_atr_filter
    bull_fvg := bull_fvg and (l[1] - h[2]) >= atr5 * sens_coeff
    bear_fvg := bear_fvg and (l[2] - h[1]) >= atr5 * sens_coeff

if bull_fvg
    topB := l[1]
    botB := h[2]
    tB := t
    if not na(topS) and t < t1830
        overTop = math.min(topB, topS)
        overBot = math.max(botB, botS)
        if overTop > overBot
            new_bull_bpr := true
            make_bpr(tB, overTop, overBot, true)

if bear_fvg
    topS := l[2]
    botS := h[1]
    tS := t
    if not na(topB) and t < t1830
        overTop = math.min(topB, topS)
        overBot = math.max(botB, botS)
        if overTop > overBot
            new_bear_bpr := true
            make_bpr(tS, overTop, overBot, false)

if array.size(bprs) > MAX_BPR
    box.delete(array.shift(bprs))
    line.delete(array.shift(mids))
    label.delete(array.shift(tags))
    array.shift(dirs)
    array.shift(tops)
    array.shift(bottoms)

invalidate_low = math.min(c, o)
invalidate_high = math.max(c, o)
if array.size(bprs) > 0
    for i = array.size(bprs) - 1 to 0
        b = array.get(bprs, i)
        ln = array.get(mids, i)
        lb = array.get(tags, i)
        top = array.get(tops, i)
        bottom = array.get(bottoms, i)
        is_bull = array.get(dirs, i)
        if is_bull
            if invalidate_low > bottom
                box.set_right(b, t + min5)
                line.set_x2(ln, t + min5)
            else if invalidate_low < bottom
                bull_mitigated := true
                if not show_mitigated
                    box.delete(b)
                    line.delete(ln)
                    label.delete(lb)
                    array.remove(bprs, i)
                    array.remove(mids, i)
                    array.remove(tags, i)
                    array.remove(dirs, i)
                    array.remove(tops, i)
                    array.remove(bottoms, i)
                else
                    box.set_right(b, t)
                    line.set_x2(ln, t)
                    box.set_bgcolor(b, color.new(bpr_color, 95))
                    box.set_border_color(b, color.black)
                    line.set_color(ln, color.new(color.black, 95))
        else
            if invalidate_high < top
                box.set_right(b, t + min5)
                line.set_x2(ln, t + min5)
            else if invalidate_high > top
                bear_mitigated := true
                if not show_mitigated
                    box.delete(b)
                    line.delete(ln)
                    label.delete(lb)
                    array.remove(bprs, i)
                    array.remove(mids, i)
                    array.remove(tags, i)
                    array.remove(dirs, i)
                    array.remove(tops, i)
                    array.remove(bottoms, i)
                else
                    box.set_right(b, t)
                    line.set_x2(ln, t)
                    box.set_bgcolor(b, color.new(bpr_color, 95))
                    box.set_border_color(b, color.black)
                    line.set_color(ln, color.new(color.black, 95))

alertcondition(new_bull_bpr, "Bullish BPR Detected", "New Bullish BPR formed")
alertcondition(new_bear_bpr, "Bearish BPR Detected", "New Bearish BPR formed")
alertcondition(bull_mitigated, "Bullish BPR Mitigated", "Bullish BPR has been mitigated")
alertcondition(bear_mitigated, "Bearish BPR Mitigated", "Bearish BPR has been mitigated")
